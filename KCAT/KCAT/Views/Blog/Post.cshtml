@using Clickfarm.Cms.Mvc
@using KCActorsTheatre
@using KCActorsTheatre.Cms
@model KCActorsTheatre.Web.ViewModels.BlogPostViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";    
    var req = Model.RequestContent;
    var page = req.Page as Clickfarm.Cms.Core.WebPage;
}
@section scripts {

}

@if (Model.HasPost && Model.Post.IsViewable)
{
    var post = Model.Post;
    
    <div class="row-fluid">
	    <div class="span12">
		    <div class="row-fluid">
			    @*<div class="span12" id="most-recent-blog-pic">
				    <img src="@post.ImageURL" alt="@post.Title" />
			    </div>*@
		    </div>
            <div class="row-fluid">
                <br /><br /><br />
            </div>
		    <div class="row-fluid">
			    <div class="span12" id="blog-intro">
				    <div>
					    <h2>@post.Title</h2>
					    <ul class="preview-info">
						    <li>@post.PublishDate.Value.ToShortDateString()</li>
					    </ul>
					    @Html.Raw(post.Body)
				    </div>
			    </div>
		    </div>
		    <div class="row-fluid">
			    <div class="span12 internal-blog-nav">
				    <ol>
                        @if (Model.PreviousPostID.HasValue)
                        {
					        <li><a href="/blog/post/@Model.PreviousPostID">&lt; &lt; Previous</a></li>
                        }
                        @if (Model.NextPostID.HasValue)
                        {
					        <li><a href="/blog/post/@Model.NextPostID">Next &gt; &gt; </a></li>
                        }
				    </ol>
			    </div>
		    </div>
			
		    <div class="row-fluid">
			    <div class="span12 after-blog-content">
				    <h4>Meet the Author</h4>
				    <div class="row-fluid">
					    <div class="span3">
						    <img src="@post.Author.ImageURL" alt="@post.Author.Name" class="img-rounded">
					    </div>
					    <div class="span9">
						    <h5>@post.Author.Name</h5>
						    <p>@post.Author.Description</p>
					    </div>
				    </div>
			    </div>
		    </div>
			
		    <div class="row-fluid hidden-phone">
			    <div class="span12 after-blog-content">
				    <h4>Recent Posts</h4>
				    <div class="row-fluid">
                        @if (post.Author.Posts.Count == 1)
                        {
                            <text><p>This author does not have any other recent blog posts.</p></text>
                        } 
                        else 
                        {
                            <ul>
                                @foreach (var recentPost in post.Author.Posts.Take(3))
                                {
                                    @* don't display current post in this list *@
                                    if (recentPost.PostID != Model.Post.PostID && recentPost.IsViewable)
                                    {
					                    <li><a href="/blog/post/@recentPost.PostID">@recentPost.Title</a> - Published @recentPost.PublishDate.Value.ToShortDateString()</li>
                                    }
                                }
                            </ul>
                        }
				    </div>
			    </div>
		    </div>
		    <div class="row-fluid">
			    <div class="span12 after-blog-content">
				    <h4>@Model.Post.Comments.Count Comment(s)</h4>
				    <div class="row-fluid">
					    <div class="span9" id="leave-comment-box">
                            @{ 
                                var ajaxOptions = new AjaxOptions
                                {
                                    HttpMethod = "Post",
                                    LoadingElementId = "create-item-loading",
                                    OnFailure = "createItemManager.ajaxFailure",
                                    OnSuccess = "createItemManager.ajaxSuccess"
                                };
                            }
                            @using (Ajax.BeginForm("NewComment", "Blog", null, ajaxOptions))
                            {
                                @Html.HiddenFor(m => m.Comment.PostID)
					            <div class="control-group">
                                    <div class="controls">
                                        @Html.TextBoxFor(m => m.Comment.Name, new { @placeholder = "Name" })
                                        @Html.ValidationMessageFor(m => m.Comment.Name)
                                        <br />
                                        @Html.TextAreaFor(m => m.Comment.Text, new { @rows = "7", @placeholder = "Leave your comment..." })
                                        @Html.ValidationMessageFor(m => m.Comment.Text)
                                    </div>
                                </div>
                                <div class="control-group">
                                    <div class="controls">
								        <input type="submit" class="btn comment-btn" value="Submit" />
                                    </div>
                                </div>
                            }
					    </div>
				    </div>
			    </div>
		    </div>
            @if (Model.Post.Comments.Count == 0)
            {
                <p>There are no comments.</p>
            }
            else
            {
                foreach (var comment in Model.Post.Comments.Where(p => p.IsApproved).OrderByDescending(p => p.DateCreated))
                {
		            <div class="row-fluid">
			            <div class="span12 comment-post">
				            <div class="row-fluid">
					            <div class="span9">
						            <h5>@comment.Name</h5>
						            <p>@comment.Text</p>
						            <p class="comment-info">Posted on @comment.DateCreated.ToString("g")</p>
					            </div>
				            </div>
			            </div>
		            </div>
                }
            }
	    </div>
		@*<div class="span3 search-filter">
			<h4>Search posts by keyword</h4>
			<div class="input-append">
				<input class="text-search-filter" type="text" placeholder="Keyword" />
				<button class="btn btn-search-filter">Search</button>
			</div>
		</div>*@
    </div>
}